1. Get the application URL by running these commands:
{{- if .Values.ingress.hostname }}
  http://{{- .Values.ingress.hostname }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "vault.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl --namespace {{ .Release.Namespace }} get svc -w {{ template "vault.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "vault.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP"  .Values.service.type }}
  export POD_NAME=$(kubectl --namespace {{ .Release.Namespace }} get pods -l "app={{ template "vault.name" . }},component=server" -o jsonpath="{.items[0].metadata.name}")
  echo "Use http://127.0.0.1:8200 as the Vault address after forwarding."
  kubectl port-forward --namespace {{ .Release.Namespace }} $POD_NAME 8200:{{ .Values.service.port }}
{{- end }}

# You can also check all the sealed statuses of the nodes via
kubectl --namespace {{ .Release.Namespace }} get pods -l "app={{ template "vault.name" . }},release={{ .Release.Name }},component=server" -o json | jq '.items[] | .metadata.name' -r \
  | awk '{print "kubectl --namespace {{ .Release.Namespace }} exec "$1" vault -- status -address http://127.0.0.1:8200 -format json"}' | sh | jq .sealed

# To get the API port
kubectl --namespace {{ .Release.Namespace }} get svc -l "app={{ template "vault.name" . }},release={{ .Release.Name }},component=service" -o json | \
  jq -r ".items[0].spec.ports[] | select(.name | contains(\"api\")) | .nodePort"
